# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: grpc-kafka
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      kafka:
        image: bitnami/kafka:latest
        env:
          KAFKA_CFG_NODE_ID: 1
          KAFKA_CFG_PROCESS_ROLES: broker,controller
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
          ALLOW_PLAINTEXT_LISTENER: yes
        ports:
          - 9092:9092

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Build log_collector
        run: cd log_collector && go build -v .

      - name: Build log_processor
        run: cd log_processor && go build -v .

      - name: Build log_dashboard
        run: cd log_dashboard && go build -v .

      - name: Run log_collector tests
        working-directory: ./log_collector
        run: |
          go mod tidy
          go test ./...

      - name: Run log_processor tests
        working-directory: ./log_processor
        run: |
          go mod tidy
          go test ./...

      - name: Run log_dashboard tests
        working-directory: ./log_dashboard
        run: |
          go mod tidy
          go test ./...

      - name: Docker Compose up
        run: docker compose up -d --build
