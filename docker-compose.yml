services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  topic-init:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "
      sleep 10 &&
      kafka-topics.sh --create --topic logs --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092
      "

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=grpc-kafka
    ports:
      - "5435:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  log_collector:
    build:
      context: ./log_collector
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092

  log_processor:
    build:
      context: ./log_processor
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BROKER=kafka:9092
      - TOPIC=logs
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=grpc-kafka

  log_dashboard:
    build:
      context: ./log_dashboard
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=grpc-kafka
    ports:
      - "8080:8080"

volumes:
  pgdata:
